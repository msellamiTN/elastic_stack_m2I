input {
  file {
    path => "/data/files/*.json"
    start_position => "beginning"
    sincedb_path => "/dev/null"
    codec => "json"
  }
}

filter {
  json {
    source => "message"
    skip_on_invalid_json => true
  }

  if [type] == "email" {
    # Parse JSON fields and extract relevant information
    json {
      source => "message"
      target => "email_data"
    }
    
    # Filter out events without attachments
    if ![email_data][attachments] {
      drop {}
    }
    
    mutate {
      add_field => {
        "sender" => "%{[email_data][sender]}"
        "recipient" => "%{[email_data][recipient]}"
        "date" => "%{[email_data][date]}"
        "subject" => "%{[email_data][subject]}"
        "body" => "%{[email_data][body]}"
        "tags" => "%{[email_data][tags]}"
        "attack_type" => "%{[email_data][attack_type]}"
      }
    }
    
    # Extract attachment details
    ruby {
      code => '
        attachments = event.get("[email_data][attachments]")
        if attachments
          event.set("attachments", attachments.collect { |attachment| attachment["filename"] })
          event.set("attachments_content_type", attachments.collect { |attachment| attachment["content_type"] })
        end
      '
    }
    
    # Extract IOC details
    ruby {
      code => '
        iocs = event.get("[email_data][ioc]")
        if iocs
          event.set("ioc_indicator", iocs.collect { |ioc| ioc["indicator"] })
          event.set("ioc_type", iocs.collect { |ioc| ioc["type"] })
        end
      '
    }
    
    # Remove temporary fields
    mutate {
      remove_field => ["message", "email_data", "[email_data][attachments]", "[email_data][ioc]"]
    }
  }
}

output {
  elasticsearch {
    hosts => ["https://es01:9200"]
    index => "logstash_email_attacks-%{+YYYY.MM.dd}"
    user => "elastic"
    password => "1Cge99g6yEs3s4406vWk"
    ssl => true
    cacert => "/usr/share/logstash/config/certs/ca.crt"
  }
  
  stdout {
    codec => rubydebug
  }
}
